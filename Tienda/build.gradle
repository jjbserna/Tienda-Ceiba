plugins {
	id 'org.springframework.boot' version '2.2.2.BUILD-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'jacoco'

}


group = 'com.ceiba.adn.tienda'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/customJacocoReportDir")
}


dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation 'org.springframework.session:spring-session-core'


    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    testCompileOnly 'junit:junit:4.12'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.1.0'
	compile('org.modelmapper:modelmapper:1.1.0')
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'com.h2database:h2'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

//	testImplementation 'org.springframework.security:spring-security-test'
}

jacocoTestReport {
    reports {
    	csv.enabled false
    	xml.enabled true
        html.destination file("${buildDir}/jacocoHtml")
        
    }
} 

test {
	useJUnitPlatform()
 	systemProperty "file.encoding", "utf-8" 
	jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }
}




